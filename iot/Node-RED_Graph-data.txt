[{"id":"3d655c4e.939034","type":"http in","z":"78eb57be.b16228","name":"","url":"/loadData","method":"get","swaggerDoc":"","x":408,"y":929,"wires":[["ba61ded3.84785","2ed3ec83.183bd4"]]},{"id":"ba61ded3.84785","type":"http response","z":"78eb57be.b16228","name":"","x":640,"y":930,"wires":[]},{"id":"46570799.f20108","type":"cloudant out","z":"78eb57be.b16228","name":"","cloudant":"","database":"chart","service":"IOTApp2PDF-cloudantNoSQLDB","payonly":true,"operation":"insert","x":827,"y":984,"wires":[]},{"id":"48265b8a.e168e4","type":"http in","z":"78eb57be.b16228","name":"","url":"/graphdata","method":"get","swaggerDoc":"","x":102,"y":149,"wires":[["7219da99.9326e4"]]},{"id":"6b6ae311.00b62c","type":"http response","z":"78eb57be.b16228","name":"","x":1172,"y":149,"wires":[]},{"id":"1f9e2c4c.9365a4","type":"debug","z":"78eb57be.b16228","name":"","active":false,"console":"false","complete":"false","x":812,"y":109,"wires":[]},{"id":"9420c9ba.577838","type":"template","z":"78eb57be.b16228","name":"Build chart","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<html>\n<head>\n    \n  <script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>\n  <script type=\"text/javascript\">\n    google.charts.load('current', {packages: ['corechart', 'line', 'gauge']});\n    google.charts.setOnLoadCallback(drawChart);\n    google.charts.setOnLoadCallback(drawGauge);\n    var datapoints = [\n        {{#payload.docs}}\n          [\"{{ts}}\", {{d.temperature}}],\n        {{/payload.docs}}\n    ];\n    datapoints.sort();\n    \n    function drawGauge() {\n      var gaugedt = google.visualization.arrayToDataTable([\n          ['Label', 'Value'],\n          ['Temp', datapoints[datapoints.length - 1][1]]\n        ]);\n\n      var gaugeoptions = {\n          width: 800, height: 240,\n          redFrom: 0, redTo: 32,\n          greenFrom: 65, greenTo: 80,\n          minorTicks: 5\n        };\n\n      var gauge = new google.visualization.Gauge(document.getElementById('gauge_div'));\n      document.getElementById(\"timeHolder\").innerHTML = \"Time = \" + [datapoints[datapoints.length - 1][0]];\n\n      gauge.draw(gaugedt, gaugeoptions);\n\n    }\n    \n    function drawChart() {\n      var chartdt = new google.visualization.DataTable();\n      chartdt.addColumn('string', 'X');\n      chartdt.addColumn('number', 'Temp');\n\n      chartdt.addRows(datapoints);\n    \n      var chartoptions = {\n        hAxis: {\n          title: 'Time'\n        },\n        vAxis: {\n          title: 'Temperature'\n        }\n      };\n      \n      var chart = new google.visualization.LineChart(document.getElementById('chart_div'));\n\n      chart.draw(chartdt, chartoptions);\n\n    }\n  </script>\n</head>\n<body>\n  <p>Most recent temperature reading</p>\n  <div id=\"gauge_div\" style=\"width: 800px; height: 240px;\"></div>\n  <p id=\"timeHolder\"></p>\n  <p>Temperatures over time</p>\n  <div id=\"chart_div\"></div>\n\n</body>\n</html>","x":1012,"y":149,"wires":[["6b6ae311.00b62c"]]},{"id":"2ed3ec83.183bd4","type":"function","z":"78eb57be.b16228","name":"ParseInt","func":"\n// Convert String ito Int, so that it stores as an \n// Int in the DB\nmsg.payload.Item = parseInt(msg.payload.Item); \nmsg.payload.value = parseInt(msg.payload.value); \nreturn msg;","outputs":1,"noerr":0,"x":649,"y":985,"wires":[["46570799.f20108"]]},{"id":"25bd8b01.ed1b04","type":"function","z":"78eb57be.b16228","name":"SetQuery","func":"msg.payload = {\n  \"limit\": 200,\n  \"selector\": {\n    \"ts\": {\n      \"$gt\": 0\n    }\n  },\n  \"fields\": [\n    \"ts\",\n    \"d.temperature\"\n  ],\n  \"sort\": [\n    {\n      \"ts\": \"desc\"\n    }\n  ]\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":462,"y":149,"wires":[["530167d0.875b38"]]},{"id":"530167d0.875b38","type":"http request","z":"78eb57be.b16228","name":"","method":"POST","ret":"obj","url":"https://40658a6a-5ae3-4a90-8efe-ec40130896c9-bluemix:76d9a79978be8b6c856fadb1da0da393034cdd7fa74a4a90595cdb455b42adf7@40658a6a-5ae3-4a90-8efe-ec40130896c9-bluemix.cloudant.com/raspi3monitor/_find","tls":"","x":632,"y":149,"wires":[["1f9e2c4c.9365a4","ad40005c.d9fc3"]]},{"id":"e350856f.2995f8","type":"comment","z":"78eb57be.b16228","name":"Sorting","info":"The nodes below do the sort and the call to Cloudant. ","x":632,"y":89,"wires":[]},{"id":"ad40005c.d9fc3","type":"function","z":"78eb57be.b16228","name":"Reset Headers","func":"msg.headers = msg.keepHeaders;\n\nreturn msg;","outputs":1,"noerr":0,"x":822,"y":149,"wires":[["9420c9ba.577838"]]},{"id":"7219da99.9326e4","type":"function","z":"78eb57be.b16228","name":"Persist Headers","func":"\n// Sometimes we have to do this because the headers \n// get overwritten when making the HTTP Request Call. \n\nmsg.keepHeaders = msg.headers;\nreturn msg;","outputs":1,"noerr":0,"x":282,"y":149,"wires":[["25bd8b01.ed1b04"]]},{"id":"eb9a176.88c94e8","type":"http in","z":"78eb57be.b16228","name":"","url":"/gaugedata","method":"get","swaggerDoc":"","x":102,"y":309,"wires":[["76628a87.ff51f4"]]},{"id":"d3a90db.41973f","type":"debug","z":"78eb57be.b16228","name":"","active":false,"console":"false","complete":"false","x":812,"y":269,"wires":[]},{"id":"6a6316e0.32c258","type":"function","z":"78eb57be.b16228","name":"SetQuery","func":"msg.payload = {\n  \"limit\": 1,\n  \"selector\": {\n    \"ts\": {\n      \"$gt\": 0\n    }\n  },\n  \"fields\": [\n    \"ts\",\n    \"d.temperature\"\n  ],\n  \"sort\": [\n    {\n      \"ts\": \"desc\"\n    }\n  ]\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":462,"y":309,"wires":[["be6f9f47.ccdcc"]]},{"id":"be6f9f47.ccdcc","type":"http request","z":"78eb57be.b16228","name":"","method":"POST","ret":"obj","url":"https://40658a6a-5ae3-4a90-8efe-ec40130896c9-bluemix:76d9a79978be8b6c856fadb1da0da393034cdd7fa74a4a90595cdb455b42adf7@40658a6a-5ae3-4a90-8efe-ec40130896c9-bluemix.cloudant.com/raspi3monitor/_find","tls":"","x":632,"y":309,"wires":[["d3a90db.41973f","755d32c2.2a057c"]]},{"id":"755d32c2.2a057c","type":"function","z":"78eb57be.b16228","name":"Reset Headers","func":"msg.headers = msg.keepHeaders;\n\nreturn msg;","outputs":1,"noerr":0,"x":822,"y":309,"wires":[["ed28523a.ff2bb"]]},{"id":"76628a87.ff51f4","type":"function","z":"78eb57be.b16228","name":"Persist Headers","func":"\n// Sometimes we have to do this because the headers \n// get overwritten when making the HTTP Request Call. \n\nmsg.keepHeaders = msg.headers;\nreturn msg;","outputs":1,"noerr":0,"x":282,"y":309,"wires":[["6a6316e0.32c258"]]},{"id":"80688503.d9df18","type":"http response","z":"78eb57be.b16228","name":"","x":1172,"y":309,"wires":[]},{"id":"ed28523a.ff2bb","type":"template","z":"78eb57be.b16228","name":"Build gauge","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<html>\n<head>\n    \n  <script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>\n    <script type=\"text/javascript\">\n  google.charts.load('current', {'packages':['gauge']});\n  google.charts.setOnLoadCallback(drawBasic);\n\nfunction drawBasic() {\n\n    var data = google.visualization.arrayToDataTable([\n          ['Label', 'Value'],\n          ['Temp',\n    {{#payload.docs}}\n        {{d.temperature}}\n    {{/payload.docs}}\n          ]\n        ]);\n\n      var options = {\n          width: 800, height: 240,\n          redFrom: 0, redTo: 32,\n          greenFrom: 65, greenTo: 80,\n          minorTicks: 5\n        };\n        \nvar xhr = new XMLHttpRequest();\nxhr.open('GET', '/graphdata', true);\n\n// If specified, responseType must be empty string or \"text\"\nxhr.responseType = 'text';\n\nxhr.onload = function () {\n    if (xhr.readyState === xhr.DONE) {\n        if (xhr.status === 200) {\n            console.log(xhr.response);\n            console.log(xhr.responseText);\n        }\n    }\n};\n\nxhr.send(null);\n\n\n      var chart = new google.visualization.Gauge(document.getElementById('chart_div'));\n\n      chart.draw(data, options);\n    }\n  </script>\n</head>\n<body>\n  <p>Most recent temperature reading</p>\n  <div id=\"chart_div\" style=\"width: 800px; height: 240px;\"></div>\n  <p>Time = \n    {{#payload.docs}}\n      {{ts}}\n    {{/payload.docs}}\n  </p>\n</body>\n</html>","x":1012,"y":309,"wires":[["80688503.d9df18"]]}]