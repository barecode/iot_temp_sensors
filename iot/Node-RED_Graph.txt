[{"id":"1bc7a152.c3925f","type":"http in","z":"bb388eb.3a9757","name":"","url":"/graph","method":"get","swaggerDoc":"","x":174,"y":324,"wires":[["2697b887.0349b8"]]},{"id":"edc75512.a4e428","type":"debug","z":"bb388eb.3a9757","name":"debug_db_response","active":false,"console":"false","complete":"true","x":942,"y":372,"wires":[]},{"id":"b7a895f2.2275f8","type":"function","z":"bb388eb.3a9757","name":"SetQuery","func":"msg.payload = {\n  \"limit\": 200,\n  \"selector\": {\n    \"ts\": {\n      \"$gt\": 0\n    }\n  },\n  \"fields\": [\n    \"ts\",\n    \"sensors\"\n  ],\n  \"sort\": [\n    {\n      \"ts\": \"desc\"\n    }\n  ]\n};\n\nreturn msg;","outputs":"1","noerr":0,"x":540,"y":323.99999046325684,"wires":[["2c724c4f.546744"]]},{"id":"2c724c4f.546744","type":"http request","z":"bb388eb.3a9757","name":"","method":"POST","ret":"obj","url":"https://35694ce9-b1b3-4f5b-abfb-0891b3a40076-bluemix.cloudant.com/raspi3monitor_multi/_find","tls":"","x":710,"y":323.99999046325684,"wires":[["edc75512.a4e428","9e9e47e4.9081c8"]]},{"id":"9e9e47e4.9081c8","type":"function","z":"bb388eb.3a9757","name":"Reset Headers and Format Response","func":"msg.headers = msg.keepHeaders;\n\n/** Single point to decide C vs F */\nfunction convertTemp(temp_in_c) {\n    var temp_in_f = Math.round((((temp_in_c * 9) / 5) + 32) * 10, 1) / 10; // convert to F\n    return temp_in_f;\n}\n\nmsg.lastTime = msg.payload.docs[0].ts;\nmsg.lastData = [];\nmsg.sensorIDs = [];\nObject.keys(msg.payload.docs[0].sensors).forEach(function(id) {\n    var temp = convertTemp(msg.payload.docs[0].sensors[id]);\n    msg.lastData.push({\"id\":id, \"temp\": temp});\n    msg.sensorIDs.push(id);\n});\n\nmsg.data = [];\nmsg.payload.docs.forEach(function(sample){\n    var data_sample = { \"ts\": sample.ts, sensors: [] };\n    msg.sensorIDs.forEach(function(id) {\n        var temp = convertTemp(sample.sensors[id]);\n        data_sample.sensors.push({\"id\":id, \"temp\": temp});\n    });\n    msg.data.push(data_sample);\n});\n\nreturn msg;","outputs":1,"noerr":0,"x":970,"y":322,"wires":[["518eef3b.c9d32","55556f4.b5ce39"]]},{"id":"2697b887.0349b8","type":"function","z":"bb388eb.3a9757","name":"Persist Headers","func":"\n// Sometimes we have to do this because the headers \n// get overwritten when making the HTTP Request Call. \n\nmsg.keepHeaders = msg.headers;\nreturn msg;","outputs":1,"noerr":0,"x":360,"y":323.99999046325684,"wires":[["b7a895f2.2275f8"]]},{"id":"f010e9cf.c067f8","type":"http response","z":"bb388eb.3a9757","name":"","x":1403.7500190734863,"y":323.9999990463257,"wires":[]},{"id":"518eef3b.c9d32","type":"template","z":"bb388eb.3a9757","name":"Build Graph","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<!--\n{\n  \"docs\": [\n    {\n      \"ts\": \"2017-04-29T02:29:43.139+0000\",\n      \"sensors\": [\n        { \"id\": \"28-0516a4a384ff\", \"temp\": 25.9 },\n        { \"id\": \"28-0516a42538ff\", \"temp\": 26 }\n      ]\n    }\n  ]\n}\n-->\n<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>\n<script type=\"text/javascript\">\n    google.charts.load('current', { 'packages': ['line', 'gauge']});\n    google.charts.setOnLoadCallback(drawGauge);\n    google.charts.setOnLoadCallback(drawChart);\n\n    function mapIDtoDescription(id) {\n        var description;\n        switch(id) {\n            case '28-0516a42538ff':\n                description = 'Attic';\n                break;\n            case '28-0516a426abff':\n                description = 'U_Panel';\n                break;\n            case '28-0516a43adbff':\n                description = 'Panel';\n                break;\n            case '28-0516a43dc8ff':\n                description = 'U_Exposed';\n                break;\n            case '28-0516a43e57ff':\n                description = 'Exposed';\n                break;\n            case '28-0516a49a8cff':\n                description = 'House';\n                break;\n            case '28-0516a4a384ff':\n                description = 'Ceiling';\n                break;\n            default:\n                description = 'unknown';\n        }\n        return description;\n    }\n\n    function drawGauge() {\n        var options = {\n          height: 300, width: 300,\n          redFrom: 0, redTo: 32,\n          greenFrom: 65, greenTo: 80,\n          minorTicks: 5\n        };\n\n        new google.visualization.Gauge(document.getElementById('gauges')).draw(google.visualization.arrayToDataTable([\n            ['Label', 'Value'],\n            {{#lastData}}\n            [mapIDtoDescription('{{id}}'), {{temp}} ],\n            {{/lastData}}\n            ]), options);\n    }\n\n    function drawChart() {\n        var data = new google.visualization.DataTable();\n        data.addColumn('string', 'Time');\n        {{#sensorIDs}}\n        data.addColumn('number', mapIDtoDescription('{{.}}'));\n        {{/sensorIDs}}\n        data.addRows([\n            {{#data}}\n            [ '{{ts}}',\n               {{#sensors}}\n                 {{temp}},\n               {{/sensors}}\n            ],\n            {{/data}}\n        ].sort());\n    \n        var options = {\n            chart: {\n                title: 'Temperature over Time',\n                subtitle: 'Last sample time: {{lastTime}}'\n            },\n            width: 900,\n            height: 500\n        };\n        var chart = new google.charts.Line(document.getElementById('chart'));\n        chart.draw(data, google.charts.Line.convertOptions(options));\n    }\n</script>\n<div id=\"chart\"></div>\n<div id=\"gauges\"></div>\n","x":1220.000015258789,"y":323.9999990463257,"wires":[["f010e9cf.c067f8"]]},{"id":"55556f4.b5ce39","type":"debug","z":"bb388eb.3a9757","name":"debug_db_response_processing","active":false,"console":"false","complete":"true","x":1300.375,"y":267,"wires":[]}]
